@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
          Find by name:
          <input type="text" name="searchString" value="@Model.CurrentFilter" />
          <input type="submit" value="Search" class="btn btn-outline-primary"/>
          <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].LastName)
                    <!-- <span class="btn spinner-grow spinner-grow-sm"></span> -->
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student[0].FirstMidName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Student) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled=!Model.Student.HasPreviousPage?"disabled":"";
    var nextDisabled=!Model.Student.HasNextPage?"disabled":"";
}
<ul class="pagination">
    <li class="page-item @prevDisabled">
        <a asp-page="./Index"
            asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="1"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="page-link">
               1 << 
        </a>
    </li>
    <li class="page-item @prevDisabled">
        <a asp-page="./Index"
            asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="page-link">
               < 
        </a>
    </li>
    <li class="page-item disabled">
        <a class="page-link">
               @Model.Student.PageIndex
        </a>
    </li>
    <li class="page-item @nextDisabled">
        <a asp-page="./Index"
            asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="page-link">
               > 
        </a>
    </li>
    <li class="page-item @nextDisabled">
        <a asp-page="./Index"
            asp-route-sortOrder="@Model.CurrentSort"
            asp-route-pageIndex="@Model.Student.TotalPages"
            asp-route-currentFilter="@Model.CurrentFilter"
            class="page-link">
               >> @Model.Student.TotalPages
        </a>
    </li>
<!-- <span>@Model.Student.PageIndex/@Model.Student.TotalPages</span> -->
</ul>
@*
<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-outline-primary @prevDisabled">
        Previous
</a>
<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-outline-primary @nextDisabled">
        Next 
</a>
*@